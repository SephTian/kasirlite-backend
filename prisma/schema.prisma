generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model menu {
  id           BigInt         @id @default(autoincrement())
  menuTypeId   BigInt         @map("menu_type_id")
  name         String         @db.VarChar(100)
  price        Decimal        @default(0) @db.Decimal(10, 0)
  discount     Decimal        @default(0) @db.Decimal(10, 0)
  disabled     Boolean        @default(false)
  image        String?
  menuType     menu_type      @relation(fields: [menuTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orderDetail  order_detail[]
}

model menu_type {
  id            BigInt  @id @default(autoincrement())
  name          String  @db.VarChar(50)
  isAdditional  Boolean @default(false) @map("is_additional")
  menu          menu[]
}

model order {
  id            BigInt            @id @default(autoincrement())
  userId        BigInt            @map("user_id")
  customerName  String            @db.VarChar(100) @map("customer_name")
  date          DateTime          @db.Timestamp(6)
  discount      Decimal           @default(0) @db.Decimal(10, 0)
  totalPrice    Decimal           @db.Decimal(10, 0) @map("total_price")
  tax           Decimal           @default(0) @db.Decimal(10, 0)
  note          String?
  status        order_status_enum
  type          order_type_enum
  user          user              @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orderDetail   order_detail[]
  payment       payment[]
}

model order_detail {
  id        BigInt  @id @default(autoincrement())
  menuId    BigInt?  @map("menu_id")
  orderId   BigInt   @map("order_id")
  quantity  Decimal @default(0) @db.Decimal
  subPrice  Decimal  @default(0) @db.Decimal(10, 3) @map("sub_price")
  menuName  String  @db.VarChar(200) @map("menu_name")
  menu      menu?   @relation(fields: [menuId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order     order   @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payment {
  id              BigInt       @id @default(autoincrement())
  paymentTypeId   BigInt       @map("payment_type_id")
  orderId         BigInt       @map("order_id")
  name            String       @db.VarChar
  payment         Decimal      @default(0) @db.Decimal(10, 3)
  proof           String?
  date            DateTime     @db.Timestamp(6)
  order           order        @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  paymentType     payment_type @relation(fields: [paymentTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payment_type {
  id      BigInt    @id @default(autoincrement())
  name    String    @db.VarChar(50)
  tax     Decimal   @default(0) @db.Decimal(10, 0)
  payment payment[]
}

model role {
  id   BigInt @id @default(autoincrement())
  name String @db.VarChar(20)
  user user[]
}

model user {
  id         BigInt    @id @default(autoincrement())
  name       String    @db.VarChar
  email      String    @db.VarChar
  password   String    @db.VarChar(100)
  updated_at DateTime? @db.Timestamp(6) @map("updated_at")
  created_at DateTime? @db.Timestamp(6) @map("created_at")
  roleId     BigInt?   @map("role_id")
  order      order[]
  role       role?     @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum order_status_enum {
  BELUM_BAYAR
  BELUM_LUNAS
  LUNAS
  DIBATALKAN
}

enum order_type_enum {
  DIBUNGKUS
  DITEMPAT
  DIANTAR
}
